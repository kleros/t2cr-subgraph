specVersion: 0.0.2
description: Requests and submission times for the t2cr.
repository: https://github.com/kleros/t2cr-data-extract
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ArbitrableTokenList
    network: "{{network}}"
    source:
      address: "{{t2cr}}"
      abi: ArbitrableTokenList
      startBlock: 7309834
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Registry
        - Request
        - Evidence
        - Round
        - Token
      abis:
        - name: ArbitrableTokenList
          file: ./abis/t2cr.json
        - name: IArbitrator
          file: ./abis/IArbitrator.json
      eventHandlers:
        - event: RequestSubmitted(indexed bytes32,bool)
          handler: handleRequestSubmitted
        - event: TokenStatusChange(indexed address,indexed address,indexed bytes32,uint8,bool,bool)
          handler: handleTokenStatusChange
        - event: Ruling(indexed address,indexed uint256,uint256)
          handler: handleRuling
        - event: MetaEvidence(indexed uint256,string)
          handler: handleMetaEvidence
      callHandlers:
        - function: fundAppeal(bytes32,uint8)
          handler: handleFundAppeal
        - function: submitEvidence(bytes32,string)
          handler: handleSubmitEvidence
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: IArbitrator
    network: mainnet
    source:
      address: "{{arbitrator}}"
      abi: IArbitrator
      startBlock: 7303699
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Registry
        - Request
        - Evidence
        - Round
        - Token
      abis:
        - name: IArbitrator
          file: ./abis/IArbitrator.json
      eventHandlers:
        - event: AppealPossible(indexed uint256,indexed address)
          handler: handleAppealPossible
      file: ./src/mapping.ts